from selenium.webdriver.common.by import By
from selenium.webdriver.support import expected_conditions as EC  # Best practice: Import as alias
from selenium.webdriver.support.ui import WebDriverWait


class Shop:
    def __init__(self, driver, wait):
        self.driver = driver  # Mistake: Initially not assigned, now fixed
        self.wait = wait  # Mistake: Initially not assigned, now fixed

        # Locators
        self.shopbtn = (By.XPATH, "//a[normalize-space()='Shop']")
        self.products = (By.XPATH, "//div[@class='card h-100']")
        self.checkOutBtn = (By.XPATH, "//a[contains(text(), 'Checkout')]")
        self.finalCheckOutBtn = (By.XPATH, "//button[contains(text(), 'Checkout')]")
        self.countryInput = (By.XPATH, "//input[@id='country']")
        self.countrySelect = (By.XPATH, "//div[@class='suggestions']/ul/li/a[contains(text(),'India')]")
        self.termsAgree = (By.XPATH, "//label[@for='checkbox2']")
        self.purchaseClick = (By.XPATH, "//input[@value='Purchase']")
        self.successMessage = (By.XPATH, "//div/strong")

    def Shopit(self):
        self.driver.find_element(*self.shopbtn).click()

        products = self.driver.find_elements(*self.products)

        for product in products:
            title = product.find_element(By.XPATH, "div/h4/a")
            if title.text == "Blackberry":
                checkOut = product.find_element(By.XPATH, "div/button")
                checkOut.click()
                break

        self.driver.find_element(*self.checkOutBtn).click()
        self.driver.find_element(*self.finalCheckOutBtn).click()
        self.driver.find_element(*self.countryInput).send_keys("Ind")

        # Fix: Use EC instead of full expected_conditions
        self.wait.until(EC.visibility_of_element_located(self.countrySelect))
        self.driver.find_element(*self.countrySelect).click()

        self.driver.find_element(*self.termsAgree).click()
        self.driver.find_element(*self.purchaseClick).click()

        # Mistake: Incorrect unpacking (*self.successMessage) in `visibility_of_element_located`
        element = self.wait.until(EC.visibility_of_element_located(self.successMessage))

        assert element.is_displayed(), "Error: Success message not displayed"  # Improved assertion message


# Test Function

def test_e2ecommerce(browserInvocation):
    driver, wait = browserInvocation
    driver.get('https://rahulshettyacademy.com/angularpractice/')

    # Mistake: Incorrect function call; should not pass driver, wait separately
    endtoend = Shop(driver, wait)  # Fix: Pass driver, wait during initialization
    endtoend.Shopit()  # Fix: Call Shopit() without arguments
